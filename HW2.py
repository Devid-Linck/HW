#1

"""Создать список и заполнить его элементами различных типов данных.
   Реализовать скрипт проверки типа данных каждого элемента.
   Использовать функцию type() для проверки типа.
   Элементы списка можно не запрашивать у пользователя, а указать явно, в программе."""

list_1 = [13, 'Hello', 13.28, True, [10, 9, 8], ('day', 'night')]
for i in list_1:
    print(f'{i} is {type(i)}')

#2
"""Для списка реализовать обмен значений соседних элементов.
   Значениями обмениваются элементы с индексами 0 и 1, 2 и 3 и т. д.
   При нечётном количестве элементов последний сохранить на своём месте.
   Для заполнения списка элементов нужно использовать функцию input()."""

li = input("Введите числа через пробел : ").split()
for i in range(1, len(li), 2):
    li[i - 1], li[i] = li[i], li[i - 1]
print(li)

li = input("Введите числа через пробел : ").split()
for i in range(1, len(li), 2):
    li.insert(i - 1, li.pop(i))
print(li)

#3

"""Пользователь вводит месяц в виде целого числа от 1 до 12.
   Сообщить, к какому времени года относится месяц (зима, весна, лето, осень).
   Напишите решения через list и dict"""

mon = int(input("Введите число месяца от 1 до 12: "))
seasons_d = {'Зима': [12, 1, 2], 'Весна': [3, 4, 5], 'Лето': [6, 7, 8], 'Осень': [9, 10, 11]}
seasons_l = ['Зима', 'Весна', 'Лето', 'Осень']

for el in seasons_d:
    if mon in seasons_d[el] and 0 < mon < 13:
        print(f'{mon}й месяц - это {el}')

if mon in [12, 1, 2]:
    print(f'{mon}й месяц - это {seasons_l[0]}')
elif mon in [3, 4, 5]:
    print(f'{mon}й месяц - это {seasons_l[1]}')
elif mon in [6, 7, 8]:
    print(f'{mon}й месяц - это {seasons_l[2]}')
elif mon in [9, 10, 11]:
    print(f'{mon}й месяц - это {seasons_l[3]}')
else:
    print('Такого месяца нет')

seasons = ["Зима", "Весна", "Лето", "Осень"]
seasonsNum = int(input('Введите номер месяца: '))
if seasonsNum > 12 or seasonsNum < 1:
    print('Такого месяца не существует')
else:
    print(seasons[seasonsNum // 3])

#4
"""Пользователь вводит строку из нескольких слов, разделённых пробелами.
   Вывести каждое слово с новой строки.
   Строки нужно пронумеровать.
   Если слово длинное, выводить только первые 10 букв в слове."""

st = input("Введите несколько слов: ").split()
for i, word in enumerate(st, 1):
    print(i, word[:10])

#5
"""Реализовать структуру «Рейтинг», представляющую собой набор натуральных чисел, который не возрастает.
   У пользователя нужно запрашивать новый элемент рейтинга.
   Если в рейтинге существуют элементы с одинаковыми значениями,
   то новый элемент с тем же значением должен разместиться после них.

   Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
   Пользователь ввёл число 3. Результат: 7, 5, 3, 3, 3, 2.
   Пользователь ввёл число 8. Результат: 8, 7, 5, 3, 3, 2.
   Пользователь ввёл число 1. Результат: 7, 5, 3, 3, 2, 1.
   Набор натуральных чисел можно задать сразу в коде, например, my_list = [7, 5, 3, 3, 2]."""

li = [7, 5, 3, 3, 2]
num = int(input("Введите число: "))
i = 0
for el in li:
    if num <= el:
        i += 1
li.insert(i, num)
print(li)

#6
"""(Дополнительно) Реализовать структуру данных «Товары».
   Она должна представлять собой список кортежей.
   Каждый кортеж хранит информацию об отдельном товаре.
   В кортеже должно быть два элемента — номер товара и словарь с параметрами, то есть характеристиками товара:
   название, цена, количество, единица измерения.
   Структуру нужно сформировать программно, запросив все данные у пользователя.

   Пример готовой структуры:
   [(1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
   (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
   (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})]
<<<<<<< HEAD
=======

>>>>>>> HW2/HW2
   Нужно собрать аналитику о товарах.
   Реализовать словарь, в котором каждый ключ — характеристика товара, например, название.
   Тогда значение — список значений-характеристик, например, список названий товаров.

   Пример:
   {“название”: [“компьютер”, “принтер”, “сканер”],
   “цена”: [20000, 6000, 2000],
   “количество”: [5, 2, 7],
   “ед”: [“шт.”]}"""

params = {"Название": "", "Цена": "", "Количество": "", "ед. измерения": ""}
res = {"Название": [], "Цена": [], "Количество": [], "ед. измерения": []}
cort = []
i = 0
while True:
    if input('Если хотите завершить программу введите stop ').capitalize() == 'stop':
        break
    i += 1
    params = params.copy()
    for el in params:
        n = input(f'Введите данные - {el}: ')
        params[el] = int(n) if n == 'цена' or n == 'количество' else n
        res[el].append(params[el])
    cort.append((i, params))
    print(cort)

for key, value in res.items():
    print(f'{key}: {value}')
